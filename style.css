
/* this creates new variable types if they aren't existing OR they will be assigned  */
/* perhaps this is so the css page doesn't show a blank page */
:root {
    --etchWidth: 500;
}

body {
    display: flex;
    flex-direction: column;
    font-family: Helvetica, sans-serif;
    align-content: stretch;
    justify-content: space-evenly;
    gap: 30px;
    height: 1000px;
    background-color: #252525;
    /* margin: 0; */
    /* flex-grow: initial; */
  
}
head {
    flex: 0;
    margin: 0;
    height: 0px;
}

.page_content {
    display: flex;
    flex-direction: column;
    align-content: stretch;
    align-items: center;
    justify-content: center;
}

.hfers {
    background-color: #3e3e3e;
    min-width: 800px;
    min-height: 100px;
}

#margin_left, #margin_right {
    /* background-color: chartreuse; */
    min-width: 100px;
    min-height: 800px;
}

.main_container {
    display: flex;
    flex-direction: row;
    font-family: Helvetica, sans-serif;
    align-items: center; 
    align-content: stretch;
    justify-content: space-evenly;
    min-width: 800px;
    max-width: 800px;
}

.mainc_subsection {
    background-color: #3e3e3e;
    padding: 5px;
    align-content: stretch;
    min-height: 800px;
    max-height: 800px;
}

#grid_frame {
    display: flex;
    flex-direction: column;
    padding: 10px;
    background-color: #3e3e3e;
    justify-content: space-evenly;
    align-items: center;
    align-content: stretch;
    min-width: var(--etchWidth) px;
    max-width: var(--etchWidth) px;
}

/*  Implementation 1 */
/* #grid_container {
    display: grid;
    grid-template: repeat(var(--grid-rows), 1fr) / repeat(var(--grid-rows), 1fr);
    
    background-color: #3e3e3e;
    max-width: 1200px;
} */

/*  Implementation 2 */
  
#grid_container {
    display: flex;
    flex-flow: row wrap;
    /* grid-template: repeat(var(--grid-rows), 1fr) / repeat(var(--grid-rows), 1fr); */
    background-color: #3e3e3e;
    /* max-width: 1200px; */
}
  
.grid_element {
    display: block;
    content: '';
    border: 1px solid #6e6e6e;
    /* text-align: center; */
    color: #3e3e3e; 
}
.grid_element:hover {
    color: #6e6e6e; 
} 

.interface_container {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-around;
    background-color:  #6e6e6e;
    align-content: stretch;
    min-width: auto;
}

.toggle_menu, .res_choices {
    display: flex;
    flex-direction: row;
    background-color: #6e6e6e;
    padding: 1px;
    margin: 5px;
    justify-content: space-around;
}

/* properties for buttons */ 

.game_choice_item {
    display: flex;
    background-color: #3882F6;
    font-size: 16px;
    height: 26px;
    color: #E5E7EB;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
    border: 1px solid;
    box-shadow: none;
    padding: 5px;
}

.game_choice_item:hover {
    background-color: #3e3e3e;
    border: 1px  solid #3e3e3e;
}



/* properties for links*/
a {
    font-size: 18px;
    outline: none;
    /* removes underlining of links */
    /*inspired by "web-page-pilot"*/
    text-decoration: none;
  }
  
  a.link-attributes:link { 
    color: #E5E7EB;
  }
  
  /*To change the selected link color:*/
  a.link-attributes​:active {
    color: purple; 
  }
  
  /*To change the mouseover color:*/
  a.link-attributes​:hover {
    color: green; 
  }
  
  /*To change the active color:*/
  a.link-attributes​:active { 
    color: blue; 
  }
  